# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

# The IndiGO sdk release pipeline

# This defines the "Run pipeline" menu.
parameters:
  - name: shouldPublishLibraries
    displayName: 'Publish libraries to Nexus'
    type: boolean
    default: true
  - name: versionExamples
    displayName: 'Version examples (ivi-example-app)'
    type: string
    default: ' '
  - name: shouldPublishLineageOsImage
    displayName: 'Publish the LineageOS system image to Nexus'
    type: boolean
    default: false
  - name: versionLineageOs
    displayName: 'Version LineageOS system image (tablet)'
    type: string
    default: '18.1.18'
  - name: shouldPublishEmulatorImages
    displayName: 'Publish the latest available emulator system images to Nexus'
    type: boolean
    default: false

variables:
  - template: private-pool-agents/private-cloud-agents.yml@devops-templates
  - template: .azure-templates/variables.yml
  # Variable groups used below are defined in the project's Pipelines Library.
  - group: 'AzureStorage'
  - group: 'AZToken'
  # Access data required for CI pipeline to publish results from security vulnerabilities scanning.
  - group: bdtools-access-secrets
  - group: 'AmazonWebServices'
  - group: 'IviArtifactoryCredentials'
  - group: 'IviNexusCredentials'
  - group: 'IviGithubCredentials'
  - group: 'JiraCredentials'  
  - group: 'NavKit2ApiKey'
  - group: 'ProductVersion'
  - name: isMainlineBuild
    value: $[ and(
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['System.DefinitionId'], 4785)
      ) ]
  - name: versionExamples
    value: ${{ parameters.versionExamples }}
  - name: publishLibraries
    ${{ if eq(parameters['shouldPublishLibraries'], true) }}:
      value: '--publish_libs'
  - name: publishLineageOsImage
    ${{ if eq(parameters['shouldPublishLineageOsImage'], true) }}:
      value: '--publish_lineageos'
  - name: versionLineageOs
    value: ${{ parameters.versionLineageOs }}
  - name: publishEmulatorImages
    ${{ if eq(parameters['shouldPublishEmulatorImages'], true) }}:
      value: '--publish_emulators'

resources:
  containers:
  - container: docker_indigo_delivery
    image: 'indigo/delivery:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
  - container: docker_indigo_build
    image: 'indigo/build:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
  - container: docker_indigo_scanner
    image: 'indigo/scanner:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageTestingOptions)
  repositories:
  - repository: indigoqa
    type: git
    name: IVI/indigo-qa
  - repository: devops-templates
    type: git
    name: IVI/devops-templates
    ref: refs/tags/2.0.13
  - repository: ivi-example-app
    type: git
    name: IVI/ivi-example-app
    ref: refs/tags/$(versionExamples)
  - repository: indigo
    type: git
    name: IVI/indigo
  - repository: indigo-ca-android-communication
    type: git
    name: IVI/indigo-ca-android-communication
  - repository: tomtom-android-tools
    type: github
    endpoint: tomtom-internal_bilkes_personal
    name: tomtom-internal/TomTom-Android-Tools

trigger:
- none

pool: 'IVI 2.0'

stages:
  - stage: Versions
    displayName: 'Get versions'
    jobs:
      - job: GetVersions
        displayName: 'Get versions'
        container: docker_indigo_delivery
        steps:
          - template: .azure-templates/expose-versions.yml
          - template: build/build-cleanup.yml@devops-templates

  - stage: Publishing
    dependsOn: []
    displayName: 'Publish artifacts to Nexus'
    jobs:
      - job: PublishToNexus
        timeoutInMinutes: 90
        displayName: Publish artifacts to Nexus
        container: docker_indigo_delivery
        steps:
          - template: .azure-templates/publishing-nexus.yml
          - template: build/build-cleanup.yml@devops-templates

  - stage: OSSCompliance
    displayName: OSS compliance scan
    dependsOn: Versions
    variables:
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_PLATFORM'] ]
      VERSION_COMMUNICATIONS_SDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_COMMS_SDK'] ]
      VERSION_NAVKIT2: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVKIT2_CORE_BOM'] ]
      VERSION_TOMTOM_ANDROID_TOOLS: $[ stageDependencies.Versions.GetVersions.outputs['Version.TOMTOM_ANDROID_TOOLS'] ]
      VERSION_NAVTESTCORE: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVTEST'] ]
      VERSION_NAVEMULATOR: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVUI_EMULATORS'] ]
      VERSION_NAVKIT2UI: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVKIT2_UI'] ]
    condition: and(eq(variables.isMainlineBuild, true), succeeded())
    jobs:
      - job: OSSComplianceScan
        displayName: OSS compliance scan
        container: docker_indigo_scanner
        steps:
          - template: .azure-templates/oss-groupedreport.yml
            parameters:
              conf_file_path: .azure-templates/bdtools-sdk.yml
              product: ivi-indigo-sdk
              product_version: $(versionExamples)
              report_filename: "oss-compliance_tomtom-indigo-sdk"
              artifactory_location: indigo_sdk_ossreport
              bdtools_environment: prod

  - stage: Verification
    dependsOn: [ Publishing, Versions ]
    variables:
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_PLATFORM'] ]
      PATCH_VERSION_EXAMPLES: $[ stageDependencies.Publishing.PublishToNexus.outputs['Nexus.PATCH_VERSION_EXAMPLES'] ]
    jobs:
      - job: DownloadAndVerify
        displayName: 'Verify SDK contents'
        timeoutInMinutes: 30
        container: docker_indigo_build
        steps:
          - template: .azure-templates/downloading-nexus.yml
            parameters:
              sdkArtifactVersion: '$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)'
              versionLineageOs: '$(versionLineageOs)'
          - template: gradle/gradle.yml@devops-templates
            parameters:
              cwd: $(Build.SourcesDirectory)/downloads/sdk/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(versionExamples)-sources
              tasks: >-
                assemble
              projectOptions: >-
                -PnexusUsername=$(VERIFICATION_USERNAME)
                -PnexusPassword=$(VERIFICATION_PASSWORD)
                -Pnavkit2ApiKey=$(NAVKIT2_API_KEY)
              displayName: 'Assemble APKs using dependencies from Nexus'
          - template: build/build-cleanup.yml@devops-templates

  - stage: Documentation
    displayName: 'Generate and publish API References and Developer Portal'
    dependsOn: [ Versions, Verification]
    variables:
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_PLATFORM'] ]
      VERSION_TOMTOM_ANDROID_TOOLS: $[ stageDependencies.Versions.GetVersions.outputs['Version.TOMTOM_ANDROID_TOOLS'] ]
      VERSION_COMMUNICATIONS_SDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_COMMS_SDK'] ]
    condition: and(eq(variables.isMainlineBuild, true), succeeded())
    jobs:
      - job: ReleasesData
        displayName: 'Releases data'
        container: docker_indigo_delivery
        steps:
          - template: .azure-templates/releases-data.yml
      - template: .azure-templates/api-ref-jobs.yml
      # - template: .azure-templates/portal_export.yml
      # TODO(IVI-6383): Add DevPortal export to SDK Release Pipeline

  - stage: Publication
    dependsOn: [ Documentation, Verification, Publishing, Versions ]
    variables:
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_PLATFORM'] ]
      VERSION_TOMTOM_ANDROID_TOOLS: $[ stageDependencies.Versions.GetVersions.outputs['Version.TOMTOM_ANDROID_TOOLS'] ]
      VERSION_COMMUNICATIONS_SDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.INDIGO_COMMS_SDK'] ]
      PATCH_VERSION_EXAMPLES: $[ stageDependencies.Publishing.PublishToNexus.outputs['Nexus.PATCH_VERSION_EXAMPLES'] ]
    condition: and(eq(variables.isMainlineBuild, true), succeeded())
    jobs:
      # TODO(IVI-4866): Publish Example App source to github as part of the SDK release
      - job: PublishRelease
        displayName: 'Publish SDK release to Nexus'
        timeoutInMinutes: 10
        container: docker_indigo_delivery
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: tomtom-indigo-sdk
              path: $(Build.SourcesDirectory)/downloads
            displayName: Download the tomtom-indigo-sdk pipeline artifact
          - bash: |
              set -eux
              curl -v -u '$(NEXUS_USERNAME):$(NEXUS_PASSWORD)'\
                -F "maven2.generate-pom=true"\
                -F "maven2.groupId=com.tomtom.indigo"\
                -F "maven2.artifactId=tomtom-indigo-sdk"\
                -F "version=$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)"\
                -F "maven2.asset1=@$(Build.SourcesDirectory)/downloads/tomtom-indigo-sdk-$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES).tar.gz"\
                -F "maven2.asset1.extension=tar.gz"\
                "https://repo.tomtom.com/service/rest/v1/components?repository=ivi"
          - task: ExtractFiles@1
            displayName: Extracting SDK artifact
            inputs:
              archiveFilePatterns: 'downloads/tomtom-indigo-sdk-$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES).tar.gz'
              destinationFolder: $(Build.SourcesDirectory)/artifactsource
              cleanDestinationFolder: true
          - template: .azure-templates/publishing-github.yml
            parameters:
              internalExampleSourceFolder: $(Build.SourcesDirectory)/artifactsource/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(versionExamples)-sources/
              sdkVersion: '$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)'
          - template: azure/updatevariablegroup.yml@devops-templates
            parameters:
              endpoint: $(System.TeamFoundationCollectionUri)/$(System.TeamProject)
              groupName: 'ProductVersion'
              variableName: 'PREVIOUS_PRODUCT_VERSION'
              variableValue: $(VERSION_PLATFORM)
              condition: and(eq(variables.isMainlineBuild, true), succeeded())
      - job: SyncLatestApiDocumentation
        displayName: 'Sync latest API documentation'
        timeoutInMinutes: 10
        container: docker_indigo_delivery
        steps:
          - checkout: none
          - template: .azure-templates/aws-S3-upload-or-delete.yml
            parameters:
              apiSubFolder: tomtom-android-tools-api
              artifactName: tomtom-android-tools-api-docs
              version: $(VERSION_TOMTOM_ANDROID_TOOLS)
              syncLatest: true
          - template: .azure-templates/aws-S3-upload-or-delete.yml
            parameters:
              apiSubFolder: tomtom-indigo-gradleplugins-api
              artifactName: indigo-gradleplugins-api-docs
              version: $(VERSION_PLATFORM)
              syncLatest: true
          - template: .azure-templates/aws-S3-upload-or-delete.yml
            parameters:
              apiSubFolder: tomtom-indigo-comms-sdk-api
              artifactName: indigo-communications-sdk-api-docs
              version: $(VERSION_COMMUNICATIONS_SDK)
              syncLatest: true
          - template: .azure-templates/aws-S3-upload-or-delete.yml
            parameters:
              apiSubFolder: tomtom-indigo-api
              artifactName: indigo-api-docs
              version: $(VERSION_PLATFORM)
              syncLatest: true
          - template: build/build-cleanup.yml@devops-templates
