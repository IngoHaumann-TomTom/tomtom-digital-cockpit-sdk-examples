# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

# The IndiGO sdk release pipeline

# This defines the "Run pipeline" menu.
parameters:
  - name: shouldPublishLibraries
    displayName: 'Publish libraries to Nexus'
    type: boolean
    default: true
  - name: versionExamples
    displayName: 'Version examples (ivi-example-app)'
    type: string
    default: 'latest'
  - name: shouldPublishLineageOsImage
    displayName: 'Publish the LineageOS system image to Nexus'
    type: boolean
    default: false
  - name: versionLineageOs
    displayName: 'Version LineageOS system image (tablet)'
    type: string
    default: '18.1.23'
  - name: shouldPublishEmulatorImages
    displayName: 'Publish the latest available emulator system images to Nexus'
    type: boolean
    default: false

variables:
  - template: private-pool-agents/private-cloud-agents.yml@devops-templates
  - template: .azure-templates/variables.yml
  # Variable groups used below are defined in the project's Pipelines Library.
  - group: AzureStorage
  # Access data required for CI pipeline to publish results from security vulnerabilities scanning.
  - group: bdtools-access-secrets
  - group: AmazonWebServices
  - group: 'IviArtifactoryCredentials'
  - group: HashiCorpVault
  - group: ArtifactorySaas
  - group: IviNexusCredentials
  - group: IviGithubCredentials
  - group: JiraCredentials
  - group: NavKit2ApiKey
  - group: ProductVersion
  - name: isMainlineBuild
    value: $[ and(
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['System.DefinitionId'], 4785)
      ) ]
  - name: versionExamples
    value: ${{ parameters.versionExamples }}
  - name: publishLibraries
    ${{ if eq(parameters['shouldPublishLibraries'], true) }}:
      value: '--publish_libs'
  - name: publishLineageOsImage
    ${{ if eq(parameters['shouldPublishLineageOsImage'], true) }}:
      value: '--publish_lineageos'
  - name: versionLineageOs
    value: ${{ parameters.versionLineageOs }}
  - name: publishEmulatorImages
    ${{ if eq(parameters['shouldPublishEmulatorImages'], true) }}:
      value: '--publish_emulators'
  - name: ossReportName
    value: 'oss-compliance_tomtom-indigo-sdk'
  - name: blackduckUrl
    ${{ if eq(variables['System.TeamProject'], 'IVI') }}:
      value: 'https://hub.tomtomgroup.com'
    ${{ else }}:
      value: 'https://blackduck-preprod.navkit-pipeline.tt3.com/'
  - name: blackduckApiToken
    ${{ if eq(variables['System.TeamProject'], 'IVI') }}:
      value: $(blackduck-prod-pat)
    ${{ else }}:
      value: $(blackduck-preprod-pat)

resources:
  containers:
  - container: docker_indigo_delivery
    image: 'indigo/delivery:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
  - container: docker_indigo_build
    image: 'indigo/build:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
  - container: docker_indigo_scanner
    image: 'indigo/scanner:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageTestingOptions)
  repositories:
  - repository: indigoqa
    type: git
    name: IVI/indigo-qa
  - repository: devops-templates
    type: git
    name: IVI/devops-templates
    ref: refs/tags/2.2.27
  - repository: ivi-example-app
    type: git
    name: IVI/ivi-example-app
  - repository: indigo
    type: git
    name: IVI/indigo

# Bi-daily scheduled run.
# But only if the code on the master branch has changed since the last successful scheduled run.
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml#cron-syntax
schedules:
  - cron: "0 5,12 * * *"
    displayName: Daily IndiGO SDK release trigger at 05:00 & 12:00 (UTC).
    branches:
      include:
        - master

# Only trigger from schedules. Or manual triggers.
trigger:
- none

pool: 'IVI 2.0'

stages:
  - stage: Vars
    displayName: Set up build properties
    jobs:
      - job: Properties
        steps:
          - checkout: none
          - template: hashi-corp-vault/get-artifactory-saas-secret.yml@devops-templates
            parameters:
              hcvAppRoleId: $(HCV_EDITOR_APPROLE_ID)
              hcvAppRoleSecretId: $(HCV_EDITOR_SECRET_ID)
              hcvSecretPath: 'users/$(ARTIFACTORY_EDITOR_USER)'

  - stage: Versions
    displayName: 'Get versions'
    jobs:
      - job: GetVersions
        displayName: 'Get versions'
        container: docker_indigo_delivery
        steps:
          - template: .azure-templates/check-for-new-release.yml
          - template: .azure-templates/expose-versions.yml
          - template: .azure-templates/releasenotes-check.yml
          - template: build/build-cleanup.yml@devops-templates

  - stage: Publishing
    dependsOn:
      - Vars
      - Versions
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      ARTIFACTORY_TOKEN: $[ stageDependencies.Vars.Properties.outputs['artifactory.SECRET'] ]
    displayName: 'Publish artifacts to Nexus'
    jobs:
      - job: PublishToNexus
        timeoutInMinutes: 90
        displayName: Publish artifacts to Nexus
        container: docker_indigo_build
        steps:
          - template: .azure-templates/publishing-nexus.yml
          - template: build/build-cleanup.yml@devops-templates
    condition: and(
      eq(variables.isMainlineBuild, true),
      eq(dependencies.Versions.result, 'Succeeded'),
      eq(dependencies.Versions.outputs['GetVersions.CompareVersions.releaseAllowed'], 'True')
      )

  - stage: OSSCompliance
    displayName: 'OSS compliance scan'
    dependsOn: Versions
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_PLATFORM'] ]
      VERSION_COMMUNICATIONS_SDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_COMMS_SDK'] ]
      VERSION_TOMTOM_ANDROID_TOOLS: $[ stageDependencies.Versions.GetVersions.outputs['Version.TOMTOM_ANDROID_TOOLS'] ]
      VERSION_NAVTESTCORE: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVTEST'] ]
      VERSION_NAVEMULATOR: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVUI_EMULATORS'] ]
      VERSION_NAVAPP_COMPONENTS: $[ stageDependencies.Versions.GetVersions.outputs['Version.NAVAPP_COMPONENTS'] ]
      VERSION_ALEXAAUTOSDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.ALEXA_AUTO_SDK'] ]
      ARTIFACTORY_TOKEN: $[ stageDependencies.Vars.Properties.outputs['artifactory.SECRET'] ]
    condition: and(
      eq(variables.isMainlineBuild, true),
      eq(dependencies.Versions.result, 'Succeeded'),
      eq(dependencies.Versions.outputs['GetVersions.CompareVersions.releaseAllowed'], 'True')
      )
    jobs:
      - job: OSSComplianceScan
        displayName: OSS compliance scan
        container: docker_indigo_scanner
        steps:
          - template: .azure-templates/oss-groupedreport.yml
            parameters:
              configurationFilePath: .azure-templates/bdtools-sdk.yml
              product: ivi-indigo-sdk
              productVersion: $(VERSION_EXAMPLES)
              reportFilename: $(ossReportName)
              artifactoryLocation: indigo_sdk_ossreport
              bdtoolsUrl: ${{variables.blackduckUrl}}
              bdApiToken: ${{variables.blackduckApiToken}}
          - template: mixer/notify-mixer.yml@devops-templates
            parameters:
              projectComponentUnit: 'PU AS'
              projectComponentName: 'TomTom Digital Cockpit'
              projectComponentVersion: $(VERSION_EXAMPLES)
              scanToolName: 'BLACKDUCK'
              scanType: 'SCA'
              projectnameInTool: 'ivi-indigo-sdk'
              versionnameInTool: $(VERSION_EXAMPLES)

  - stage: Verification
    dependsOn:
      - Versions
      - Publishing
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_PLATFORM'] ]
      PATCH_VERSION_EXAMPLES: $[ stageDependencies.Publishing.PublishToNexus.outputs['Nexus.PATCH_VERSION_EXAMPLES'] ]
    jobs:
      - template: .azure-templates/verify-sdk-jobs.yml

  - stage: Documentation
    dependsOn:
      - Vars
      - Versions
      - Verification
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_PLATFORM'] ]
      VERSION_TOMTOM_ANDROID_TOOLS: $[ stageDependencies.Versions.GetVersions.outputs['Version.TOMTOM_ANDROID_TOOLS'] ]
      VERSION_COMMUNICATIONS_SDK: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_COMMS_SDK'] ]
      ARTIFACTORY_TOKEN: $[ stageDependencies.Vars.Properties.outputs['artifactory.SECRET'] ]
    condition: and(
      succeeded(),
      eq(variables.isMainlineBuild, true),
      eq(dependencies.Versions.outputs['GetVersions.CheckForReleaseNotes.publishDocumentation'], true)
      )
    jobs:
      - job: ReleasesData
        displayName: 'Releases data'
        container: docker_indigo_delivery
        steps:
          - template: .azure-templates/releases-data.yml
      - template: .azure-templates/api-ref-jobs.yml

  - stage: DevPortal
    dependsOn:
      - Versions
      - Verification
      - Documentation
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
    displayName: 'Developer Portal'
    jobs:
      - job: DeveloperPortalExport
        timeoutInMinutes: 30
        displayName: Developer Portal
        container: docker_indigo_build
        steps:
          - template: .azure-templates/portal_export.yml
          - template: build/build-cleanup.yml@devops-templates
    condition: and(
      succeeded(),
      eq(variables.isMainlineBuild, true),
      eq(dependencies.Versions.outputs['GetVersions.CheckForReleaseNotes.publishDocumentation'], true)
      )

  - stage: Publication
    dependsOn:
      - Versions
      - Publishing
      - OSSCompliance
      - Verification
      - Documentation
      - DevPortal
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_PLATFORM'] ]
      PATCH_VERSION_EXAMPLES: $[ stageDependencies.Publishing.PublishToNexus.outputs['Nexus.PATCH_VERSION_EXAMPLES'] ]
      PUBLISH_DOCUMENTATION: $[ stageDependencies.Versions.GetVersions.outputs['CheckForReleaseNotes.publishDocumentation'] ]
      ARTIFACTORY_TOKEN: $[ stageDependencies.Vars.Properties.outputs['artifactory.SECRET'] ]
      ${{ if eq(variables.publishDocumentation, true) }}:
        externalRepoBranch: 'main'
        versionTag: '$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)'
      ${{ else }}:
        externalRepoBranch: 'beta'
        versionTag: '$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)-beta'
      commitMessage: 'TomTom IndiGO SDK Release $(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)'
    condition: and(
      not(failed()),
      eq(variables.isMainlineBuild, true),
      eq(dependencies.Versions.outputs['GetVersions.CompareVersions.releaseAllowed'], 'True')
      )
    jobs:
      - job: PublishRelease
        displayName: 'Publish SDK Examples'
        timeoutInMinutes: 10
        container: docker_indigo_delivery
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: tomtom-indigo-sdk
              path: $(Build.SourcesDirectory)/downloads
            displayName: Download the tomtom-indigo-sdk pipeline artifact
          - task: ExtractFiles@1
            displayName: Extracting SDK artifact
            inputs:
              archiveFilePatterns: 'downloads/tomtom-indigo-sdk-$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES).tar.gz'
              destinationFolder: $(Build.SourcesDirectory)/artifactsource
              cleanDestinationFolder: true
          - template: download/download-and-verify.yml@devops-templates
            parameters:
              downloadUrl: $(artifactoryBaseUrl)/ivi-maven/com/tomtom/ivi/indigo_sdk_ossreport/$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES)/$(ossReportName)_$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES).md
              downloadDirectory: $(Build.SourcesDirectory)/artifactsource/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(VERSION_EXAMPLES)-sources
              checksumType: 'sha256'
              displayName: Download IndiGO SDK OSS report
          - bash: |
              set -eux
              mv $(ossReportName)_$(VERSION_PLATFORM)-$(PATCH_VERSION_EXAMPLES).md "oss-compliancy-report.md"
            workingDirectory: $(Build.SourcesDirectory)/artifactsource/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(VERSION_EXAMPLES)-sources
            displayName: Rename IndiGO SDK OSS report
          # Flag -e is omitted from 'set' here because 'grep' exits with 1 if "IndiGO" is not found.
          - bash: |
              set -ux
              grep -rin "indigo" .
              if [ $? -ne 0 ]; then
                echo "No usage of IndiGO found."
              else 
                echo "IndiGO found in SDK Examples."
                exit 1
              fi
            workingDirectory: $(Build.SourcesDirectory)/artifactsource/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(VERSION_EXAMPLES)-sources
            displayName: Check for usage of IndiGO
          - template: .azure-templates/publishing-github.yml
            parameters:
              internalExampleSourceFolder: $(Build.SourcesDirectory)/artifactsource/tomtom-indigo-sdk-$(VERSION_PLATFORM)/examples/products_indigo_examples-$(VERSION_EXAMPLES)-sources/
          - template: azure/updatevariablegroup.yml@devops-templates
            parameters:
              endpoint: $(System.TeamFoundationCollectionUri)/$(System.TeamProject)
              groupName: 'ProductVersion'
              variableName: 'RELEASED_PLATFORM_VERSION'
              variableValue: $(VERSION_PLATFORM)
              condition: and(
                succeeded(),
                eq(variables.isMainlineBuild, true),
                eq(variables.PUBLISH_DOCUMENTATION, true)
                )
          - template: azure/updatevariablegroup.yml@devops-templates
            parameters:
              endpoint: $(System.TeamFoundationCollectionUri)/$(System.TeamProject)
              groupName: 'ProductVersion'
              variableName: 'RELEASED_BETA_PLATFORM_VERSION'
              variableValue: $(VERSION_PLATFORM)
              condition: and(
                succeeded(),
                eq(variables.isMainlineBuild, true)
                )

  - stage: Cleanup
    dependsOn:
      - Versions
      - OSSCompliance
      - Documentation
      - DevPortal
      - Publication
    variables:
      VERSION_EXAMPLES: $[ stageDependencies.Versions.GetVersions.outputs['Version.EXAMPLES'] ]
      VERSION_PLATFORM: $[ stageDependencies.Versions.GetVersions.outputs['Version.IVI_PLATFORM'] ]
      PUBLISH_DOCUMENTATION: $[ stageDependencies.Versions.GetVersions.outputs['CheckForReleaseNotes.publishDocumentation'] ]
      ARTIFACTORY_TOKEN: $[ stageDependencies.Vars.Properties.outputs['artifactory.SECRET'] ]
    condition: or(
      eq(dependencies.OSSCompliance.result, 'Failed'),
      eq(dependencies.Documentation.result, 'Failed'),
      eq(dependencies.DevPortal.result, 'Failed'),
      eq(dependencies.Publication.result, 'Failed')
      )
    jobs:
      - job: DeleteReleaseEntry
        displayName: 'Delete release entry'
        timeoutInMinutes: 10
        container: docker_indigo_delivery
        condition: eq(variables.PUBLISH_DOCUMENTATION, true)
        steps:
          - template: .azure-templates/releases-data.yml
            parameters:
              deleteReleaseEntry: true

  - stage: Metrics
    displayName: Collect Metrics
    dependsOn:
      - Versions
      - Publishing
      - OSSCompliance
      - Verification
      - Documentation
      - DevPortal
      - Publication
      - Cleanup
    condition: eq(variables['System.TeamProject'], 'IVI')
    jobs:
      - template: metrics/start-metrics-pipeline.yml@devops-templates
