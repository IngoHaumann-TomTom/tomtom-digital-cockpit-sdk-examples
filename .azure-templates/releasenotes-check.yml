# Copyright Â© 2022 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

steps:
  - bash: |
      set -e

      # Returns the date and time of a tag.
      # Example: 2022-03-10 17:50:16 +0000 (tag: 1.0.3387).
      newTagInfo=$(git log --tags --pretty="format:%ci %d" |grep $(Version.IVI_PLATFORM))
      oldTagInfo=$(git log --tags --pretty="format:%ci %d" |grep $(RELEASED_PLATFORM_VERSION))

      # Returns the date that belongs to the tag.
      newTagDate=$(echo $newTagInfo |cut -d ' ' -f1)
      oldTagDate=$(echo $oldTagInfo |cut -d ' ' -f1)

      # Returns the time that belongs to the tag.
      newTagTime=$(echo $newTagInfo |cut -d ' ' -f2)
      oldTagTime=$(echo $oldTagInfo |cut -d ' ' -f2)

      # Export variables.
      echo "##vso[task.setvariable variable=newTagDateTime;isOutput=true]$newTagDate $newTagTime"
      echo "##vso[task.setvariable variable=oldTagDateTime;isOutput=true]$oldTagDate $oldTagTime"
    workingDirectory: $(Build.SourcesDirectory)/indigo
    name: TagInfo
    displayName: 'Get date & time of git tags'
    condition: and(succeeded(), ne(variables['BuildTags.buildTagsMatched'], 'False'))

    # Sets a task variable [publishDocumentation] to "true" and creates a "tickets.json" file if
    # there are tickets with release notes.
    # Otherwise sets [publishDocumentation] to "false" if there are no tickets with release notes.
  - task: PythonScript@0
    name: CheckForReleaseNotes
    displayName: 'Check for release notes'
    inputs:
      scriptSource: 'filePath'
      scriptPath: $(Build.SourcesDirectory)/indigo-qa/tooling/Sdk/retrieve_ticket_info.py
      pythonInterpreter: /usr/bin/python3.8
      workingDirectory: $(Build.SourcesDirectory)/indigo-qa/tooling/Sdk/
      arguments:
        --jira_user $(JIRA_USERNAME)
        --jira_pass $(JIRA_PASSWORD)
        --new_tag_datetime "$(TagInfo.newTagDateTime)"
        --old_tag_datetime "$(TagInfo.oldTagDateTime)"
    condition: and(succeeded(), ne(variables['BuildTags.buildTagsMatched'], 'False'))

  - publish: $(Build.SourcesDirectory)/indigo-qa/tooling/Sdk/tickets.json
    artifact: jira-tickets
    displayName: 'Publish tickets.json as pipeline artifact'
    condition: and(succeeded(), eq(variables['CheckForReleaseNotes.publishDocumentation'], 'true'))

  - bash: |
      set -eu

      if [ "$(CheckForReleaseNotes.publishDocumentation)" = "True" ]
      then
        echo "##vso[task.setvariable variable=latestReleasedPlatformVersion]$(RELEASED_PLATFORM_VERSION)"
      else
        echo "##vso[task.setvariable variable=latestReleasedPlatformVersion]$(RELEASED_BETA_PLATFORM_VERSION)"
      fi
    displayName: 'Get latest released platform version'
    condition: and(succeeded(), ne(variables['BuildTags.buildTagsMatched'], 'False'))

  - task: PythonScript@0
    name: CompareVersions
    displayName: 'Compare IndiGO platform versions'
    inputs:
      scriptSource: 'inline'
      pythonInterpreter: /usr/bin/python3.8
      script: |
        from semantic_version import Version

        release_allowed = True
        if Version("$(Version.IVI_PLATFORM)") <= Version("$(latestReleasedPlatformVersion)"):
          print(
            "##vso[task.logissue type=warning;]Not allowed to release platform for version "
            "[$(Version.IVI_PLATFORM)]! Previously the platform has been already successfully "
            "released for version [$(latestReleasedPlatformVersion)], which is the same or newer."
          )
          release_allowed = False
        print(f"##vso[task.setvariable variable=releaseAllowed;isOutput=true]{release_allowed}")
    condition: and(succeeded(), ne(variables['BuildTags.buildTagsMatched'], 'False'))
