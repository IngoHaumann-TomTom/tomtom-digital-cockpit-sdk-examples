# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

parameters:
  branch: 'indigo-platform-canary'

steps:
  - bash: |
      set -eux
      if [[ -z "${{parameters.branch}}" ]] || [[ "${{parameters.branch}}" == "master" ]] || [[ "${{parameters.branch}}" == release* ]]
      then
        echo "Parameter branch=${{parameters.branch}} not allowed."
        exit 1
      fi
    displayName: 'Check job parameters'

  - checkout: self
    persistCredentials: true
    clean: true

  - template: gradle/gradle.yml@devops-templates
    parameters:
      tasks: >-
        generateIndigoLibrariesVersionFile
      projectOptions: >-
        -PlatestIndigoVersion=$(PRODUCT_VERSION)
        -PuseInternalNavkit2ApiKey=true
      displayName: 'Check for new IndiGO library versions'

  - bash: |
      set -eux
      if [ ! -f "libraries.versions.toml" ]
      then
        echo "No IndiGO library update was found."
        exit 1
      fi
      REPO_VERSION_FILE="build-logic/libraries.versions.toml"
      if ! grep -qs indigoPlatform ${REPO_VERSION_FILE}
      then
        echo "${REPO_VERSION_FILE} does not exist or does not contain the IndiGO platform version."
        exit 1
      fi
      INDIGO_VERSION="$(grep "indigoPlatform = " ${REPO_VERSION_FILE} | awk '{split($0,a," "); print a[3]}')"
      git config --global user.email "ivi_dev@groups.tomtom.com"
      git config --global user.name "Azure DevOps"
      git branch -D ${{parameters.branch}} || true
      git checkout -b ${{parameters.branch}}
      echo "##vso[task.setvariable variable=branchCreated]True"
      mv libraries.versions.toml ${REPO_VERSION_FILE}
      git diff > $(Build.ArtifactStagingDirectory)/indigo-update.patch
      git commit -a -m "Last integrated version of IndiGO platform: ${INDIGO_VERSION}"
    displayName: 'Commit updated IndiGO lib to ${{parameters.branch}} branch'


  - bash: |
      set -eux
      git push -f origin ${{parameters.branch}}
    displayName: 'Push ${{parameters.branch}} branch to origin'
    condition: eq(variables['branchCreated'], 'True')

  - task: PublishPipelineArtifact@1
    displayName: Publish libraries update patch as artifact
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/indigo-update.patch'
      artifactName: indigo-update.patch
    condition: eq(variables['branchCreated'], 'True')

  - bash: |
      set -eux
      git checkout $(Build.SourceBranchName)
      git branch -D ${{parameters.branch}}
    displayName: 'Clean up local branches'
    condition: eq(variables['branchCreated'], 'True')
