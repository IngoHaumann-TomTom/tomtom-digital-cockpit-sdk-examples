# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

parameters:
  nexusUrl: https://repo.tomtom.com/repository/ivi
  iviGroup: com/tomtom/ivi
  indigoGroup: com/tomtom/indigo
  sdkArtifactVersion: ''
  versionLineageOs: ''


steps:
- template: download/download-and-verify.yml@devops-templates
  parameters:
    downloadUrl: ${{parameters.nexusUrl}}/${{parameters.iviGroup}}/lineageos-gts4lvwifi/${{parameters.versionLineageOs}}/lineageos-gts4lvwifi-${{parameters.versionLineageOs}}-ota.zip
    displayName: Download and verify AAOS system image for tablet
    userName: $(NEXUS_USERNAME)
    password: $(NEXUS_PASSWORD)
    condition: and(eq(variables.publishLineageOsImage, '--publish_lineageos'), succeeded())

- bash: |
    set -eux
    curl -Lo repo-sys-img.xml https://aaos.blob.core.windows.net/tomtom-digital-cockpit/repo-sys-img.xml
  displayName: Download repo-sys-img.xml file
  condition: and(eq(variables.publishEmulatorImages, '--publish_emulators'), succeeded())

- task: PythonScript@0
  name: getEmulatorDownloadLinks
  inputs:
    scriptSource: 'inline'
    pythonInterpreter: /usr/bin/python3
    script: |
      import xml.dom.minidom as md

      repo_sys_img_xml_file = "$(Build.SourcesDirectory)/repo-sys-img.xml"
      content = md.parse(repo_sys_img_xml_file)
      center_display_image = content.getElementsByTagName("url")[0].firstChild.nodeValue
      cluster_display_image = content.getElementsByTagName("url")[1].firstChild.nodeValue
      print(f"##vso[task.setvariable variable=center;isOutput=true]{center_display_image}")
      print(f"##vso[task.setvariable variable=cluster;isOutput=true]{cluster_display_image}")
  displayName: Get download urls from repo-sys-img file
  condition: and(eq(variables.publishEmulatorImages, '--publish_emulators'), succeeded())

- template: download/download-and-verify.yml@devops-templates
  parameters:
    downloadUrl: $(getEmulatorDownloadLinks.center)
    displayName: Download and verify AAOS system image for emulator (center display)
    userName: $(NEXUS_USERNAME)
    password: $(NEXUS_PASSWORD)
    condition: and(eq(variables.publishEmulatorImages, '--publish_emulators'), succeeded())

- template: download/download-and-verify.yml@devops-templates
  parameters:
    downloadUrl: $(getEmulatorDownloadLinks.cluster)
    displayName: Download and verify AAOS system image for emulator (cluster display)
    userName: $(NEXUS_USERNAME)
    password: $(NEXUS_PASSWORD)
    condition: and(eq(variables.publishEmulatorImages, '--publish_emulators'), succeeded())

- task: DownloadPipelineArtifact@2
  inputs:
    artifact: tomtom-indigo-sdk
    path: $(Build.SourcesDirectory)/downloads
  displayName: Download the tomtom-indigo-sdk pipeline artifact
  condition: and(eq(variables.publishLibraries, '--publish_libs'), succeeded())

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '**/*.tar.gz'
    destinationFolder: '$(Build.SourcesDirectory)/downloads/sdk'
    cleanDestinationFolder: false
    overwriteExistingFiles: false
  displayName: Extract tomtom-indigo-sdk-${{parameters.sdkArtifactVersion}}.tar.gz
  condition: and(eq(variables.publishLibraries, '--publish_libs'), succeeded())
