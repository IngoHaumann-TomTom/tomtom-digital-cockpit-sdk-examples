# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

steps:
- checkout: self
  persistCredentials: true

- bash: |
    set -eux
    echo "Product version: $(product_version)"
    version_tag=$(gitversion /nocache /verbosity error /showvariable SemVer)
    version_branch=$(Build.SourceBranchName)
  displayName: 'Check version being published'

- download: current
  artifact: builds

- template: gradle/gradle.yml@devops-templates
  parameters:
    tasks: >-
      artifactoryPublish
    projectOptions: >-
      -PiviVersion=$(product_version)
      -PartifactoryBaseUrl=$(artifactoryBaseUrl)
      -PartifactoryUser=$(artifactoryUser)
      -PartifactoryToken=$(artifactoryToken)
      -PartifactoryRepo=$(artifactoryRepo)
      -Dorg.gradle.internal.http.socketTimeout=900000
      -Dorg.gradle.internal.http.connectionTimeout=900000
    displayName: Publish APKs to Artifactory
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), succeeded())

- bash: |
    set -eu
    git config --global user.email "ivi_dev@groups.tomtom.com"
    git config --global user.name "Azure DevOps"
    echo "Tagging commit with $(product_version)"
    git tag "$(product_version)"
    git push origin "$(product_version)"
  displayName: Tag commit
  condition: and(eq(variables.isMainlineBuild, true), succeeded())

- bash: |
    # Do not use "set -eux" here, otherwise tag definition below will contain an extra quote at the end
    set -eu

    tomlFilePath=build-logic/libraries.versions.toml
    IVI_PLATFORM=$(cat $tomlFilePath | grep "iviPlatform = " | grep -Eo "[0-9].[0-9].[0-9]+")

    echo "##vso[build.addbuildtag]$(product_version)"
    echo "##vso[build.addbuildtag]indigoPlatform=$IVI_PLATFORM"
  displayName: Add version tag to pipeline run
  condition: succeeded()
