# Copyright (c) 2020 - 2021 TomTom N.V. All rights reserved.
#
# This software is the proprietary copyright of TomTom N.V. and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# licensee agreement between you and TomTom. If you are the licensee, you are only permitted
# to use this Software in accordance with the terms of your license agreement. If you are
# not the licensee then you are not authorised to use this software in any manner and should
# immediately return it to TomTom N.V.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

variables:
  - template: private-pool-agents/private-cloud-agents.yml@devops-templates
  - template: .azure-templates/variables.yml
  # Variable groups containing the passwords used below are defined in the project's Pipelines Library.
  - group: IviArtifactoryCredentials
  # Use to limit jobs to builds of the 'master' branch, made on the pipeline whose definition id
  # is 1986 (the IndiGO Docs main pipeline).
  - name: isMainlineBuild
    value: $[ and(
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(variables['System.DefinitionId'], 1986)
      ) ]

trigger: none

resources:
  containers:
  # Docker containers with run options for private cloud agents and shared Gradle caches.
  - container: docker_indigo_build
    image: 'indigo/build:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageDefaultOptions)
  - container: docker_indigo_test
    image: 'indigo/test:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageTestingOptions)
  repositories:
  - repository: devops-templates
    type: git
    name: IVI/devops-templates

pool: 'Private Cloud CPU'

stages:
- stage: Build
  displayName: 'Build pipeline'
  jobs:
  - job: Build
    displayName: Lint & Build
    timeoutInMinutes: 15
    container: 'docker_indigo_build'
    steps:
    - template: .azure-templates/build.yml
    - template: build/build-cleanup.yml@devops-templates

  - job: UnitTests
    displayName: Unit tests
    container: 'docker_indigo_test'
    timeoutInMinutes: 15
    steps:
    - template: .azure-templates/test-unit.yml
    - template: build/build-cleanup.yml@devops-templates

  - job: IntegrationTests
    displayName: Integration & E2E tests
    container: 'docker_indigo_test'
    timeoutInMinutes: 15
    steps:
    - template: .azure-templates/test-instrumented.yml
      parameters:
        artifactName: integration-test
        testTasks: >-
          runDebugAndroidTests
    - template: build/build-cleanup.yml@devops-templates

- stage: Publishing
  condition: and(eq(variables.isMainlineBuild, true), succeeded())
  jobs:
  - job: Publish
    container: 'docker_indigo_build'
    displayName: Publish artifacts
    steps:
    - template: .azure-templates/publishing.yml

  - job: PublishRepository
    displayName: publishing Repository to Artifactory
    dependsOn: Publish
    container: 'docker_indigo_build'
    variables:
      product_version: $[ dependencies.Publish.outputs['versionInfo.semver'] ]
    steps:
    - bash: |
        set -eux
        ls -1A | xargs -d "\n" tar cfz products_indigo_examples-$(product_version)-sources.tar.gz
      displayName: Archive repository to tar
    - template: publish/push-to-artifactory.yml@devops-templates
      parameters:
        currentProductVersion: "$(product_version)"
        workingDirectory: "$(Build.SourcesDirectory)"
        artifactId: "products_indigo_examples"
        folderOrFileName: "products_indigo_examples-$(product_version)-sources.tar.gz"
        condition: and(eq(variables.isMainlineBuild, true), succeeded())