# Copyright Â© 2020 TomTom NV. All rights reserved.
#
# This software is the proprietary copyright of TomTom NV and its subsidiaries and may be
# used for internal evaluation purposes or commercial use strictly subject to separate
# license agreement between you and TomTom NV. If you are the licensee, you are only permitted
# to use this software in accordance with the terms of your license agreement. If you are
# not the licensee, you are not authorized to use this software in any manner and should
# immediately return or destroy it.

# Azure pipelines documentation is available at
# https://aka.ms/yaml

variables:
  - template: private-pool-agents/private-cloud-agents.yml@devops-templates
  - template: .azure-templates/variables.yml
  - name: indigoBranchName
    value: indigo-platform-canary
  - group: 'ProductVersion'
  - group: 'IviArtifactoryCredentials'

trigger: none

resources:
  pipelines:
  - pipeline: indigo_trigger
    project: IVI
    source: IndiGO
    trigger:
      branches:
        include:
          - master
          - releases/*
  containers:
  # Docker containers with run options for private cloud agents and shared Gradle caches.
  - container: docker_indigo_build
    image: 'indigo/build:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageDefaultOptions)
  - container: docker_indigo_test
    image: 'indigo/test:$(dockerImageVersion)'
    endpoint: 'IVI-Docker'
    options: $(dockerImageTestingOptions)
  repositories:
  - repository: devops-templates
    type: git
    name: IVI/devops-templates
    ref: refs/tags/2.0.16

pool: 'IVI 2.0'

stages:
- stage: ProductVersion
  displayName: Product version
  jobs:
  - template: .azure-templates/product-get-version.yml

- stage: PrepareIndigoDocsBranch
  displayName: 'IndiGO Docs canary branch'
  dependsOn: ProductVersion
  variables:
    platform_version: $[ stageDependencies.ProductVersion.Version.outputs['version.platform_version'] ]
  jobs:
  - job: Libraries
    workspace:
      clean: all
    displayName: 'Publish IndiGO libraries to ivi-test'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    container: 'docker_indigo_build'
    steps:
    - template: .azure-templates/publish-indigo-libraries.yml
      parameters:
        iviVersion: '$(platform_version)'

  - job: PrepareIndigoDocsBranch
    dependsOn: Libraries
    condition: in(dependencies.Libraries.result, 'Succeeded', 'Skipped')
    displayName: 'Preparing IndiGO Docs branch'
    container: 'docker_indigo_build'
    steps:
    - bash: echo "Resetting trigger"
    - template: .azure-templates/indigo-update.yml
      parameters:
        branch: '$(indigoBranchName)-$(platform_version)'
        newIndigoVersion: '$(platform_version)'

- stage: Build
  displayName: 'Build pipeline'
  dependsOn: [ PrepareIndigoDocsBranch, ProductVersion ]
  variables:
    product_version: $[ stageDependencies.ProductVersion.Version.outputs['version.product_version'] ]
    platform_version: $[ stageDependencies.ProductVersion.Version.outputs['version.platform_version'] ]
  jobs:
  - job: Build
    displayName: 'Lint & Build'
    timeoutInMinutes: 30
    container: 'docker_indigo_build'
    steps:
    - template: .azure-templates/build-steps.yml
      parameters:
        branch: '$(indigoBranchName)-$(platform_version)'
    - template: build/build-cleanup.yml@devops-templates

  - job: UnitTests
    displayName: 'Unit tests'
    container: 'docker_indigo_test'
    timeoutInMinutes: 15
    steps:
    - template: .azure-templates/test-unit.yml
      parameters:
        branch: '$(indigoBranchName)-$(platform_version)'
    - template: build/build-cleanup.yml@devops-templates

  - job: IntegrationTests
    displayName: 'Integration & E2E tests'
    container: 'docker_indigo_test'
    timeoutInMinutes: 15
    steps:
    - template: .azure-templates/test-instrumented.yml
      parameters:
        artifactName: integration-test
        branch: '$(indigoBranchName)-$(platform_version)'
        testTasks: >-
          runDebugAndroidTests
    - template: build/build-cleanup.yml@devops-templates

- stage: MergeIndigoDocsBranch
  displayName: 'IndiGO Docs branch merge'
  dependsOn: [ Build, ProductVersion ]
  variables:
    platform_version: $[ stageDependencies.ProductVersion.Version.outputs['version.platform_version'] ]
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: MergeIndigoDocsBranch
    displayName: 'Merge IndiGO Docs canary branch'
    container: 'docker_indigo_build'
    steps:
    - template: .azure-templates/merge-feature-branch.yml
      parameters:
        branch: '$(indigoBranchName)-$(platform_version)'

- stage: Clean
  displayName: 'Clean'
  dependsOn: [ MergeIndigoDocsBranch, ProductVersion ]
  variables:
    platform_version: $[ stageDependencies.ProductVersion.Version.outputs['version.platform_version'] ]
  condition: always()
  jobs:
  - job: RemoveBranch
    displayName: 'Remove IndiGO Docs canary branch'
    container: 'docker_indigo_build'
    steps:
    - checkout: self
      persistCredentials: true
    - bash: |
        set -eux
        git push --delete origin $(indigoBranchName)-$(platform_version) || true
